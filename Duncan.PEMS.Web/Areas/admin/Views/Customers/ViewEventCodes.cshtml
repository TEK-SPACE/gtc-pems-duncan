@model Duncan.PEMS.Entities.Customers.CustomerEventCodesModel
@using Duncan.PEMS.Entities.Customers
@using Duncan.PEMS.Utilities
@{
    ViewBag.Title = HttpContext.Current.GetLocaleResource( ResourceTypes.PageTitle, "View Customer Event Codes" );
}


@section PageHeader 
{
    <h1><a href="/">@HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Admin" )</a> / @HttpContext.Current.GetLocaleResource( ResourceTypes.PageTitle, "Customer View" ) / <span>@HttpContext.Current.GetLocaleResource( ResourceTypes.PageTitle, "Event Codes" )</span></h1>
}


<div class="validationSum-container">@Html.ErrorOverview( ViewData.ModelState )</div>

<div class="customer_cred">
    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Customer Id" ): </div>
    <div class="customer_text">@Html.DisplayFor( m => m.CustomerId )</div>
</div>
<div class="customer_cred">
    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Customer Name" ): </div>
    <div class="customer_text">@Html.DisplayFor( m => m.DisplayName )</div>
</div>
<div class="customer_status">
    <div class="customer_status_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Status" ): <span class="customer_status_state state_new">@Html.DisplayFor( m => m.Status.Status )</span></div>
    <div class="customer_status_as_of">@Html.DisplayFor( m => m.Status.StatusDate )</div>
</div>

<div class="customer_tabs">
    <div class="customer_tab">@Html.ActionLink( "Identification", "ViewCustomer", "Customers", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab">@Html.ActionLink( "Assets", "ViewAssets", "Customers", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab">@Html.ActionLink( "Payments", "ViewPayments", "Customers", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab">@Html.ActionLink( "Rules", "ViewRules", "Customers", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab">@Html.ActionLink( "Custom Labels", "ViewCustomLabels", "Customers", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab">@Html.ActionLink( "Custom Grids", "ViewCustomGrids", "Customers", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab selected_tab">@Html.ActionLink( "Event Codes", "ViewEventCodes", "Customers", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab">@Html.ActionLink( HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Areas" ).ToString(), "ViewAreas", "Customers", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab">@Html.ActionLink( HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Maintenance Schedule" ).ToString(), "ViewMaintenanceSchedule", "Customers", new {customerId = @Model.CustomerId}, null )</div>
</div>


    <div class="customer_tab_content">

        Under Development
        

        <div class="customer_actions">
            @Html.ActionLink(@HttpContext.Current.GetLocaleResource(ResourceTypes.Button, "Continue").ToString(), "ViewAreas", "Customers", new {customerId = Model.CustomerId}, new { @class = "button important", @type = "button" })
            @Html.ActionLink(@HttpContext.Current.GetLocaleResource(ResourceTypes.Button, "Return").ToString(), "Index", "Customers", new {rtn = "true"}, new { @class = "button previous", @type = "button" })
        </div>

    </div>


<script type="text/javascript">

    // Create a view-model for the page controls. Model holds variables and view-related methods
    var viewModel = kendo.observable({
        
    });

    $(document).ready(function() {

        // bind the view model to the filter controls
        kendo.bind($(document.body), viewModel);
    });

</script>



<div class="customer_footer">
    <div class="customer_last_mod_by">
        Last Modified by: @Html.DisplayFor( m => m.Status.ModifiedBy )
        @Html.Raw( " on " )
        @Html.DisplayFor( m => m.Status.ModifiedOn )
    </div>
    <div class="customer_created_by">
        Created by: @Html.DisplayFor( m => m.Status.CreatedBy )
        @Html.Raw( " on " )
        @Html.DisplayFor( m => m.Status.CreatedOn )
    </div>
</div>