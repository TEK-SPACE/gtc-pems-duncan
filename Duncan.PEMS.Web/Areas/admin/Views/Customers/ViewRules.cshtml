@model Duncan.PEMS.Entities.Customers.CustomerRulesModel
@using Duncan.PEMS.Entities.Customers
@using Duncan.PEMS.Utilities
@using Kendo.Mvc.UI

@{
    ViewBag.Title = HttpContext.Current.GetLocaleResource( ResourceTypes.PageTitle, "View Customer Rules" );
}


@section PageHeader 
{
    <h1><a href="/">@HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Admin" )</a> / @HttpContext.Current.GetLocaleResource( ResourceTypes.PageTitle, "Customer View" ) / <span>@HttpContext.Current.GetLocaleResource( ResourceTypes.PageTitle, "Rules" )</span></h1>
}


<div class="validationSum-container">@Html.ErrorOverview( ViewData.ModelState )</div>

<div class="customer_cred">
    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Customer Id" ): </div>
    <div class="customer_text">@Html.DisplayFor( m => m.CustomerId )</div>
</div>
<div class="customer_cred">
    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Customer Name" ): </div>
    <div class="customer_text">@Html.DisplayFor( m => m.DisplayName )</div>
</div>
<div class="customer_status">
    <div class="customer_status_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Status" ): <span class="customer_status_state state_new">@Html.DisplayFor( m => m.Status.Status )</span></div>
    <div class="customer_status_as_of">@Html.DisplayFor( m => m.Status.StatusDate )</div>
</div>

<div class="customer_tabs">
    <div class="customer_tab">@Html.ActionLink( "Identification", "ViewCustomer", "Customers", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab">@Html.ActionLink( "Assets", "ViewAssets", "Customers", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab">@Html.ActionLink( "Payments", "ViewPayments", "Customers", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab selected_tab">@Html.ActionLink( "Rules", "ViewRules", "Customers", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab">@Html.ActionLink( "Custom Labels", "ViewCustomLabels", "Customers", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab">@Html.ActionLink( "Custom Grids", "ViewCustomGrids", "Customers", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab">@Html.ActionLink( "Event Codes", "ViewEventCodes", "Customers", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab">@Html.ActionLink( HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Areas" ).ToString(), "ViewAreas", "Customers", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab">@Html.ActionLink( HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Maintenance Schedule" ).ToString(), "ViewMaintenanceSchedule", "Customers", new {customerId = @Model.CustomerId}, null )</div>
</div>

    <div class="customer_tab_content">
        
        <div class="two-column">

            <div class="customer_tab_content_section">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Rules" )</div>    
        
            <div class="checkbox">
                <input type="checkbox" name="ChkZeroOutMeter" data-bind="checked: ZeroOutMeter" disabled="disabled">&nbsp;@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Zero Out Meter" )
            </div>

            <div class="checkbox">
                <input type="checkbox" name="ChkBlackListCC" data-bind="checked: BlackListCC" disabled="disabled">&nbsp;@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Black List CC" )
            </div>
       
            <div class="checkbox">
                <input type="checkbox" name="ChkStreetline" data-bind="checked: Streetline" disabled="disabled">&nbsp;@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Streetline" )
            </div>
             <div class="checkbox">
                <input type="checkbox" name="ChkCloseWorkOrderEvents" data-bind="checked: CloseWorkOrderEvents">&nbsp;@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Work Orders: Close Individual Events" )
            </div>
            <div>
                <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Grace Period" )@Html.Raw( ": " )</div>
                @Html.DisplayFor( m => m.GracePeriod, new {@class = "customer_text"} )&nbsp;
                @(Model.GracePeriod == 1 ? HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Minute" ) : HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Minutes" ))
            </div>    

            <div>
                <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Free Parking Limit" )@Html.Raw( ": " )</div>
                @Html.DisplayFor( m => m.FreeParkingLimit, new {@class = "customer_text"} )&nbsp;
                @(Model.FreeParkingLimit == 1 ? HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Minute" ) : HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Minutes" ))
            </div>    
        </div>
        
        <div class="two-column">
            <div class="customer_tab_content_section">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Discount Scheme" )</div>    

            <div>
                <div style="float: left; width: 30%">
                    @Html.CheckBoxFor( m => m.DiscountSchema, new {@class = "checkbox", onchange = "discountSchemasChanged();"} )&nbsp;@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Discount Scheme" )
                    @*                    <input type="checkbox" name="DiscountSchema" data-bind="checked: DiscountSchema">&nbsp;Discount Scheme*@
                </div>
                <div id="DiscountSchema_Schemas" style="float: left;">
                    <div id="DiscountSchemas_Div" class="add-remove-box">
                        @foreach (var schema in @Model.DiscountSchemas)
                        {
                            @Html.Raw( "<div class=\"add-remove-box-row\">" )
                            @Html.Raw( schema.Name + " " )
                            @Html.CheckBox( Model.SchemaPrefix + Model.Separator + schema.Id, schema.Enabled, new {@class = "checkbox"} )
                            @Html.Raw( "</div>" )
                        }
                    </div>
                </div>

            </div>
        </div>
        
        <div class="customer_tab_content_section">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Operation / Time Tier" )</div>    
        
        @{
            var dateTimeFormat = "";
            var basicTimePicker = "style=\"width: 120px\" data-role=\"timepicker\" data-interval=\"15\"";
            if ( @Model.Is24HrFormat )
            {
                dateTimeFormat += " data-format=\"H:mm\"";
            }
            else
            {
            }
        }
        
        <div class="time-picker">
            <div  class="time-picker-checkbox">
                <input type="checkbox" name="ChkOperationTime" data-bind="checked: OperationTime" disabled="disabled">&nbsp;@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Operation Time" )
            </div>
            <div>
                @Html.Raw( "Start: " ) @Model.OperationalTimes.OperationStartDisplay
                @Html.Raw( "&nbsp;&nbsp;" )
                @Html.Raw( "End: " ) @Model.OperationalTimes.OperationEndDisplay
            </div>
        </div>

        <div class="time-picker">
            <div  class="time-picker-checkbox">
                <input type="checkbox" name="ChkPeakTime" data-bind="checked: PeakTime" disabled="disabled">&nbsp;@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Peak Time" )
            </div>
            <div>
                @Html.Raw( "Start: " ) @Model.OperationalTimes.PeakStartDisplay
                @Html.Raw( "&nbsp;&nbsp;" )
                @Html.Raw( "End: " ) @Model.OperationalTimes.PeakEndDisplay
            </div>
        </div>

        <div class="time-picker">
            <div  class="time-picker-checkbox">
                <input type="checkbox" name="ChkEveningTime" data-bind="checked: EveningTime" disabled="disabled">&nbsp;@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Evening Time" )
            </div>
            <div>
                @Html.Raw( "Start: " ) @Model.OperationalTimes.EveningStartDisplay
                @Html.Raw( "&nbsp;&nbsp;" )
                @Html.Raw( "End: " ) @Model.OperationalTimes.EveningEndDisplay
            </div>
        </div>
    
        <div class="customer_actions">
            @Html.ActionLink(@HttpContext.Current.GetLocaleResource(ResourceTypes.Button, "Continue").ToString(), "ViewCustomLabels", "Customers", new {customerId = Model.CustomerId}, new { @class = "button important", @type = "button" })
            @Html.ActionLink(@HttpContext.Current.GetLocaleResource(ResourceTypes.Button, "Return").ToString(), "Index", "Customers", new {rtn = "true"}, new { @class = "button previous", @type = "button" })
        </div>

    </div>


<div class="customer_footer">
    <div class="customer_last_mod_by">
        @HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Last Modified by" ): @Html.DisplayFor( m => m.Status.ModifiedBy )
        @Html.Raw( " on " )
        @Html.DisplayFor( m => m.Status.ModifiedOn )
    </div>
    <div class="customer_created_by">
        @HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Created by" ): @Html.DisplayFor( m => m.Status.CreatedBy )
        @Html.Raw( " on " )
        @Html.DisplayFor( m => m.Status.CreatedOn )
    </div>
</div>

<script type="text/javascript">

    // Create a view-model for the page controls. Model holds variables and view-related methods
    var viewModel = kendo.observable({
        DiscountSchema: @Html.Raw( Model.DiscountSchema ).ToString().ToLower(),

        ZeroOutMeter: @Html.Raw( Model.ZeroOutMeter ).ToString().ToLower(),
        BlackListCC: @Html.Raw( Model.BlacklistCC ).ToString().ToLower(),
        Streetline: @Html.Raw( Model.Streetline ).ToString().ToLower(),
        CloseWorkOrderEvents: @Html.Raw(Model.CloseWorkOrderEvents).ToString().ToLower(),
        OperationTime: @Html.Raw( Model.OperationalTimes.HasOperationTime ).ToString().ToLower(),
        OperationTimeStart: new Date("@Html.Raw( Model.OperationalTimes.OperationStart )"),
        OperationTimeEnd: new Date("@Html.Raw( Model.OperationalTimes.OperationEnd )"),
        PeakTime: @Html.Raw( Model.OperationalTimes.HasPeakTime ).ToString().ToLower(),
        PeakTimeStart: new Date("@Html.Raw( Model.OperationalTimes.PeakStart )"),
        PeakTimeEnd: new Date("@Html.Raw( Model.OperationalTimes.PeakEnd )"),
        EveningTime: @Html.Raw( Model.OperationalTimes.HasEveningTime ).ToString().ToLower(),
        EveningTimeStart: new Date("@Html.Raw( Model.OperationalTimes.EveningStart )"),
        EveningTimeEnd: new Date("@Html.Raw( Model.OperationalTimes.EveningEnd )"),
        OnChange: function(e) {

            var senderName = e.sender.element[0].name;

            if (senderName == "OperationTimeStart" || senderName == "OperationTimeEnd") {
                if (this.OperationTimeEnd < this.OperationTimeStart) {
                    this.set("OperationTimeEnd", this.OperationTimeStart);
                }
            } else if (senderName == "PeakTimeStart" || senderName == "PeakTimeEnd") {
                if (this.PeakTimeEnd < this.PeakTimeStart) {
                    this.set("PeakTimeEnd", this.PeakTimeStart);
                }
            } else { // (senderName == "EveningTimeStart" || senderName == "EveningTimeEnd") {
                if (this.EveningTimeEnd < this.EveningTimeStart) {
                    this.set("EveningTimeEnd", this.EveningTimeStart);
                }
            }
        }
    });

    $(document).ready(function() {

        // bind the view model to the filter controls
        kendo.bind($(document.body), viewModel);

        discountSchemasChanged();

        $("#DiscountSchema").attr("disabled", "true");

    });

    function discountSchemasChanged() {

        if ($("#DiscountSchema").is(':checked')) {
            $("#DiscountSchema_Schemas").find('*').removeAttr("disabled");
        } else {
            $("#DiscountSchema_Schemas").find('*').attr("disabled", "true");
        }

    }

    ;

</script>