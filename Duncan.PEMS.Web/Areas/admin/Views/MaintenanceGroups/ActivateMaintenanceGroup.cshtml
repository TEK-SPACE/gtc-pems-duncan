@model Duncan.PEMS.Entities.MaintenanceGroups.MaintenanceGroupActivateModel
@using Duncan.PEMS.Entities.Customers
@using Duncan.PEMS.Utilities

@{
    ViewBag.Title = HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Activate Group" ).ToString();
}

@section PageHeader 
{
    <h1>Admin / Customer Edit / <span>Grids</span></h1>
}

<div class="validationSum-container">@Html.ErrorOverview( ViewData.ModelState )</div>

<div class="customer_cred">
    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Group Id" ): </div>
    <div class="customer_text">@Html.DisplayFor( m => m.CustomerId )</div>
</div>
<div class="customer_cred">
    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Group Name" ): </div>
    <div class="customer_text">@Html.DisplayFor( m => m.DisplayName )</div>
</div>
<div class="customer_status">
    <div class="customer_status_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Status" ): <span class="customer_status_state state_new">@Html.DisplayFor( m => m.Status.Status )</span></div>
    <div class="customer_status_as_of">@Html.DisplayFor( m => m.Status.StatusDate )</div>
</div>


<div class="customer_tabs">
    <div class="customer_tab">@Html.ActionLink( "Identification", "EditMaintenanceGroup", "MaintenanceGroups", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab ">@Html.ActionLink( HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Customers" ).ToString(), "EditMaintenanceGroupCustomers", "MaintenanceGroups", new {customerId = @Model.CustomerId}, null )</div>
  
      @if ( Model.Status.StatusId == CustomerStatus.New )
    {
        <div class="customer_tab selected_tab">@Html.ActionLink( HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Activate" ).ToString(), "ActivateMaintenanceGroup", "MaintenanceGroups", new {customerId = @Model.CustomerId}, null )</div>
    }
</div>


@using (Html.BeginForm("ActivateMaintenanceGroup", "MaintenanceGroups", FormMethod.Post, new { @class = "customer-form", @id = "activateMaintenanceGroup" }))
{
    @Html.HiddenFor( m => m.CustomerId )

    <div class="customer_tab_content">
        
        @if ( Model.CanActivate )
        {
            <div><strong>@Model.ActivateMessage</strong></div>
        }
        else
        {
            <div>
                <strong>The following issues must be resolved before @Model.DisplayName can be activated.</strong>
            </div>
            
            foreach (var issue in Model.Issues)
            {
                if ( string.IsNullOrEmpty( issue.Action ) )
                {
                    <div>@issue.Description</div>
                }
                else
                {
                    <div>@Html.ActionLink( @issue.Description, issue.Action, issue.Controller, new {@customerId = @Model.CustomerId}, new {@class="customerValidateLink"} )</div>
                }
            }
        }

        <div class="customer_actions">
            @if ( Model.CanActivate )
            {
                <button type="submit" name="submitButton" class="button important" value="ACTIVATE" >@HttpContext.Current.GetLocaleResource( ResourceTypes.Button, "Activate" )</button>
            }
            <button type="submit" name="submitButton" class="button previous" value="RETURN" >@HttpContext.Current.GetLocaleResource( ResourceTypes.Button, "Return" )</button>
        </div>

    </div>
}

<div class="customer_footer">
    <div class="customer_last_mod_by">
        @HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Last Modified by" ): @Html.DisplayFor( m => m.Status.ModifiedBy )
        @Html.Raw( " on " )
        @Html.DisplayFor( m => m.Status.ModifiedOn )
    </div>
    <div class="customer_created_by">
        @HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Created by" ): @Html.DisplayFor( m => m.Status.CreatedBy )
        @Html.Raw( " on " )
        @Html.DisplayFor( m => m.Status.CreatedOn )
    </div>
</div>