@model Duncan.PEMS.Entities.MaintenanceGroups.MaintenanceGroupCustomersModel
@using Duncan.PEMS.Entities.Customers
@using Duncan.PEMS.Utilities
@using Kendo.Mvc.UI

@{
    ViewBag.Title = HttpContext.Current.GetLocaleResource( ResourceTypes.PageTitle, "Edit Group" );
}


@section Styles
{
    <style type="text/css">
        .areas-existing-grid {
            float: left;
            width: 30% !important;
        }
        .areas-new-grid {
            float: left;
            padding-left: 20px;
            height: 200px;
        }
        .areas-new-text {
            margin-left: 10px;
            width: 80% !important;
        }
        .areas-new-button {
            float: right;
            margin-left: 10px;
            margin-top: 0px;
        }
        .k-button-icontext .k-icon {
            margin: 0 !important;
        }

        .k-grid-filter {
            background-color: #efefef;
        }

        .k-state-active, .k-state-active:hover, .k-active-filter {
            background-color: #33bab1 !important;
        }

        .k-filter-menu > div > span:first-of-type {
            display: none;
        }

        .k-grid tbody .k-button, .k-ie8 .k-grid tbody button.k-button {
            min-width: 20px !important;
            text-decoration: none !important;
            padding: 0px !important;
        }

        .validationSum-container {
            height: auto !important;
        }

        .field-validation-error {
            clear: both !important;
            display: block;
        }

        .two-column a {
            background: none;
         }
    </style>
}

@section PageHeader 
{
    <h1><a href="/">@HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Admin" )</a> / @HttpContext.Current.GetLocaleResource( ResourceTypes.PageTitle, "Maintenance Group Inquiry" ) / <span>@HttpContext.Current.GetLocaleResource( ResourceTypes.PageTitle, "Update Group" )</span></h1>
}

<div class="validationSum-container">@Html.ErrorOverview( ViewData.ModelState )</div>

<div class="customer_cred">
    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Group Id" ): </div>
    <div class="customer_text">@Html.DisplayFor( m => m.CustomerId )</div>
</div>
<div class="customer_cred">
    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Group Name" ): </div>
    <div class="customer_text">@Html.DisplayFor( m => m.DisplayName )</div>
</div>
<div class="customer_status">
    <div class="customer_status_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Status" ): <span class="customer_status_state state_new">@Html.DisplayFor( m => m.Status.Status )</span></div>
    <div class="customer_status_as_of">@Html.DisplayFor( m => m.Status.StatusDate )</div>
</div>

<div class="customer_tabs">
    <div class="customer_tab">@Html.ActionLink( HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Identification" ).ToString(), "EditMaintenanceGroup", "MaintenanceGroups", new {customerId = @Model.CustomerId}, null )</div>
    <div class="customer_tab selected_tab">@Html.ActionLink( HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Customers" ).ToString(), "EditMaintenanceGroupCustomers", "MaintenanceGroups", new {customerId = @Model.CustomerId}, null )</div>
    @if ( Model.Status.StatusId == CustomerStatus.New )
    {
        <div class="customer_tab">@Html.ActionLink( HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Activate" ).ToString(), "ActivateMaintenanceGroup", "MaintenanceGroups", new {customerId = @Model.CustomerId}, null )</div>
    }
</div>

@using (Html.BeginForm("EditMaintenanceGroupCustomers", "MaintenanceGroups", FormMethod.Post, new { @class = "customer-form", @id = "maintGroupCustomers" }))
{
    @Html.HiddenFor( m => m.CustomerId )
     <!-- Hidden form fields for form save.  These will contain new fields for associated form areas. -->
    <input id="NewCustomers" name="NewCustomers" type="hidden" value="" />     
    <div class="customer_tab_content">
    
        <div class="customer_tab_content_section">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Customers" )</div>    
         <div class="areas-existing-grid">
                @(Html.Kendo().Grid( Model.Customers ) // Bind the grid to the Model property of the view
                      .Name( "ExistingCustomersGrid" )
                      .Columns( columns =>
                          {
                              columns.Bound( p => p.Id ).Width( 100 ).Title( "Id" );
                              columns.Bound(p => p.DisplayName);
                              columns.Bound(p => p.NewCustomer).Visible(false);
                              columns.Command(command => command.Custom("x").Click("OnRemoveCustomer")).HtmlAttributes(new {@class = "newCustomer"}).Width(40);                              
                          } )
                    .Events(e => e.DataBound("onDataBound"))
                      .Scrollable( scr => scr.Height( 200 ) )
                      .DataSource(dataSource => dataSource
                                             .Ajax()
                                             .ServerOperation(false)
                      )
                )
            </div>
        <div class="areas-new-grid">
            @(Html.Kendo().DropDownList()
         .Name("ddlNewCustomer")
         .DataTextField("Text")
         .DataValueField("Value")
         .BindTo(Model.AvailableCustomers)
         )
            <button type="submit" name="submitButton" class="button areas-new-button" onclick="return OnAddCustomer('ExistingCustomersGrid', 'ddlNewCustomer', 'Customers');">@HttpContext.Current.GetLocaleResource( ResourceTypes.Button, "Add" )</button>
        </div>       
        <div class="customer_actions">
            <button type="submit" name="submitButton" class="button" value="SAVE" onclick="return SaveAllAreas()" >@HttpContext.Current.GetLocaleResource( ResourceTypes.Button, "Save" )</button>
            <button type="submit" name="submitButton" class="button previous" value="RETURN" >@HttpContext.Current.GetLocaleResource( ResourceTypes.Button, "Return" )</button>
        </div>
    </div>
}

<script type="text/javascript">

    var customersToAdd = new Array();
    $(document).ready(function() {

    });
    

    function onDataBound(e) {
        var data = this._data;
        for (var x = 0; x < data.length; x++) {
            var dataItem = data[x];
            if (!dataItem.NewCustomer) {
                var tr = $("#ExistingCustomersGrid").find("[data-uid='" + dataItem.uid + "']");
                tr.find('.newCustomer a').remove();
            }
        }
    }


    function OnRemoveCustomer(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        if (dataItem.NewCustomer) {
            this.dataSource.remove(dataItem);
            this.refresh();
        } else {
            alert("Saved Customers cannot be removed");
        }
        e.preventDefault();
    }

    function OnAddCustomer(theGrid, theNewItemDdl) {
        var currentCustomers = $('#' + theGrid).data('kendoGrid');
        var currentDs = currentCustomers.dataSource;
        var selectedText = $("#" + theNewItemDdl).data("kendoDropDownList").text();
        var selectedValue = $("#" + theNewItemDdl).data("kendoDropDownList").value();

        if (selectedValue != "-1") {

            var alreadyExists = false;
            // Does this name already exist?
            
            var allData = currentDs.data();

            //get a list of all selected meters
            $.each(allData, function (index, currentItem) {
                if (selectedValue == currentItem.Id) {
                    alreadyExists = true;
                }
            });
            if (alreadyExists) {
                alert("Item '" + selectedText + "' already exists");
            } else {
                currentDs.insert({ Id: selectedValue, DisplayName: selectedText, NewCustomer: true});
                $("#" + theNewItemDdl).data("kendoDropDownList").value("-1");
            }
        }
        return false;
    }
    
   

    function SaveNewItems(theGrid, theHiddenField) {
        var allData = $('#' + theGrid).data('kendoGrid').dataSource.data();

        var data = "";
        $.each(allData, function (idx, currentItem) {
            if (currentItem.NewCustomer) {
                data += currentItem.Id + "@Model.Separator";
            }
        });

        $("#" + theHiddenField).val(data);
        return true;
    }

    function SaveAllAreas() {

        var accept = confirm('Any new customers added will NOT be able to be removed from this group or added to any other group. Are you sure?');
        if (accept) {
          return  SaveNewItems("ExistingCustomersGrid", "NewCustomers");
        }

        return false;
    }

</script>
<div class="customer_footer">
    <div class="customer_last_mod_by">
        @HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Last Modified by" ): @Html.DisplayFor( m => m.Status.ModifiedBy )
        @Html.Raw( " on " )
        @Html.DisplayFor( m => m.Status.ModifiedOn )
    </div>
    <div class="customer_created_by">
        @HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Created by" ): @Html.DisplayFor( m => m.Status.CreatedBy )
        @Html.Raw( " on " )
        @Html.DisplayFor( m => m.Status.CreatedOn )
    </div>
</div>