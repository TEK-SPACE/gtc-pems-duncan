@model Duncan.PEMS.Entities.Assets.GatewayViewModel
@using Duncan.PEMS.Utilities
@using Kendo.Mvc.UI

@{
    ViewBag.Title = @HttpContext.Current.GetLocaleResource( ResourceTypes.PageTitle, "View Gateway" );
}

@section PageHeader 
{
    <h1><a href="/">@HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Home" )</a> / <a href="Index">@HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Asset Management" )</a> / @HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Asset Inquiry" ) / <span>@HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "View Asset" )</span></h1>
}


<div class="activationDateContainer">Activation Date: @Html.DisplayFor(m => m.ActivationDate)</div>


    <div class="customer_tab_content">
        

        
        <div class="customer_tab_content_section">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Asset Information" )</div>   
        
        <div class="clear">

            <div class="two-column payment">
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Asset Type" )@Html.Raw( ": " )</div>
                    @Html.DisplayFor( m => m.Type, new {@class = "customer_text"} )
                </div>
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Asset ID" )@Html.Raw( ": " )</div>
                    @Html.DisplayFor( m => m.AssetId, new {@class = "customer_text"} )
                </div>
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Street" )@Html.Raw( ": " )</div>
                    @Html.DisplayFor( m => m.Street, new {@class = "customer_text"} )
                </div>
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Area" )@Html.Raw( ": " )</div>
                    @Html.DisplayFor( m => m.Area, new {@class = "customer_text"} )
                </div>
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Zone" )@Html.Raw( ": " )</div>
                    @Html.DisplayFor( m => m.Zone, new {@class = "customer_text"} )
                </div>
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Suburb" )@Html.Raw( ": " )</div>
                    @Html.DisplayFor( m => m.Suburb, new {@class = "customer_text"} )
                </div>
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Latitude" )@Html.Raw( ": " )</div>
                    @Html.DisplayForLatLong( m => m.Latitude, new {@class = "customer_text"} )
                </div>
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Longitude" )@Html.Raw( ": " )</div>
                    @Html.DisplayForLatLong( m => m.Longitude, new {@class = "customer_text"} )
                </div>
            </div>

            <div class="two-column payment">
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Asset Model" )@Html.Raw( ": " )</div>
                    @Html.DisplayFor( m => m.AssetModel, new {@class = "customer_text"} )
                </div>
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Asset Name" )@Html.Raw( ": " )</div>
                    @Html.DisplayFor( m => m.Name, new {@class = "customer_text"} )
                </div>
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Last Preventative Maintenance" )@Html.Raw( ": " )@Html.Tooltip( "LastPreventativeMaintenance" )</div>
                    @Html.DisplayFor( m => m.LastPrevMaint, new {@class = "customer_text"} )
                </div>
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Next Preventative Maintenance" )@Html.Raw( ": " )@Html.Tooltip( "NextPreventativeMaintenance" )</div>
                    @Html.DisplayFor( m => m.NextPrevMaint, new {@class = "customer_text"} )
                </div>
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Maintenance Route" )@Html.Raw( ": " )@Html.Tooltip( "MaintenanceRoute" )</div>
                    @Html.DisplayFor( m => m.MaintenanceRoute, new {@class = "customer_text"} )
                </div>
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Warranty Expiration" )@Html.Raw( ": " )</div>
                    @Html.DisplayFor( m => m.WarrantyExpiration, new {@class = "customer_text"} )
                </div>

            </div>

        </div>
        
        <div class="customer_tab_content_section">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Configuration Detail" )</div>
        
        <div class="clear">
            <div class="clear">
                <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Date Installed" )@Html.Raw( ": " )</div>
                @Html.DisplayFor( m => m.Configuration.DateInstalled, new {@class = "customer_text"} )
            </div>
            <div>
                <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Configuration" )@Html.Raw( ": " )</div>
                @Html.DisplayFor( m => m.Configuration.ConfigurationName, new {@class = "customer_text"} )
            </div>
            <div class="clear">
                <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "MPV Version" )@Html.Raw( ": " )@Html.Tooltip( "MPVVersion" )</div>
                @Html.DisplayFor( m => m.Configuration.MPVVersion, new {@class = "customer_text"} )
            </div>
            <div class="clear">
                <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Software Version" )@Html.Raw( ": " )@Html.Tooltip( "SoftwareVersion" )</div>
                @Html.DisplayFor( m => m.Configuration.SoftwareVersion, new {@class = "customer_text"} )
            </div>
            <div class="clear">
                <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Firmware Version" )@Html.Raw( ": " )@Html.Tooltip( "FirmwareVersion" )</div>
                @Html.DisplayFor( m => m.Configuration.FirmwareVersion, new {@class = "customer_text"} )
            </div>
        </div>
        

        <div class="customer_tab_content_section">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Functional Status" )</div>
        
        <div class="clear">
            <div class="two-column payment">

                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Operational Status" )@Html.Raw( ": " )@Html.Tooltip( "OperationalStatus" )</div>
                    @Html.DisplayFor( m => m.Status, new {@class = "customer_text"} )
                </div>
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Operational Status Date" )@Html.Raw( ": " )</div>
                    @Html.DisplayFor( m => m.StatusDateDisplay, new {@class = "customer_text"} )
                </div>
            </div>

            <div class="two-column payment">
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Alarm Class" )@Html.Raw( ": " )</div>
                    @Html.DisplayFor( m => m.AlarmConfiguration.Class, new {@class = "customer_text"} )
                </div>
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Alarm Code" )@Html.Raw( ": " )</div>
                    @Html.DisplayFor( m => m.AlarmConfiguration.Code, new {@class = "customer_text"} )
                </div>
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Alarm Duration" )@Html.Raw( ": " )@Html.Tooltip( "AlarmDuration" )</div>
                    @Html.DisplayFor( m => m.AlarmConfiguration.Duration, new {@class = "customer_text"} )
                </div>
                <div class="clear">
                    <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Repair Target Time" )@Html.Raw( ": " )@Html.Tooltip( "RepairTargetTime" )</div>
                    @Html.DisplayFor( m => m.AlarmConfiguration.RepairTargetTime, new {@class = "customer_text"} )
                </div>
            </div>

        </div>
        
        <div class="customer_actions" style="float:left">
            @Html.ActionLink( (string) ( HttpContext.Current.GetLocaleResource( ResourceTypes.Button, "Update" ) ?? "Update" ), "EditGateway", "Assets",
                              new {customerId = Model.CustomerId, assetId = Model.AssetId, parentAssetId = 0}, 
                              new {@class = "button important", @onclick = "SetReturnURL();"} )
            @Html.ActionLink( (string) ( HttpContext.Current.GetLocaleResource( ResourceTypes.Button, "Return" ) ?? "Return" ), "ViewGateway", "Assets",
                              new {customerId = Model.CustomerId, assetId = Model.AssetId}, new {@class = "button previous"} )
        </div>

        <div class="asset_footer">
            <div class="asset_last_mod_by">
                @HttpContext.Current.GetLocaleResource(ResourceTypes.Label, "Last Modified by"): @Html.DisplayFor(m => m.LastUpdatedBy)
                @Html.Raw(" on ")
                @Html.DisplayFor(m => m.LastUpdatedOnDisplay)
            </div>
            <div class="asset_created_by">
                @HttpContext.Current.GetLocaleResource(ResourceTypes.Label, "Created by"): @Html.DisplayFor(m => m.CreatedBy)
                @Html.Raw(" on ")
                @Html.DisplayFor(m => m.CreatedOnDisplay)
            </div>
        </div>        
    </div>

<script>

    $(document).ready(function() {

        ResetReturnURL();
    });


    // *************************************************************
    // Set/Reset Return URL
    // *************************************************************

    function SetReturnURL() {
        var returnURLObject = new Object();

        returnURLObject.url = location.pathname + "?";

        if (getParameterByName('customerId')) {
            returnURLObject.url += "customerId=" + getParameterByName('customerId');
        }
        if (getParameterByName('areaId')) {
            returnURLObject.url += "&areaId=" + getParameterByName('areaId');
        }
        if (getParameterByName('assetId')) {
            returnURLObject.url += "&assetId=" + getParameterByName('assetId');
        }

        if (typeof (Storage) !== "undefined") {
            // HTML5 sessionStorage support! Yay!
            window.sessionStorage.setItem("returnToAssetURL", JSON.stringify(returnURLObject));
        } else {
            // No web storage support..
            // todo: implement fall back to server caching
        }
    }

    function ResetReturnURL() {
        if (typeof (Storage) !== "undefined") {
            // HTML5 sessionStorage support! Yay!
            window.sessionStorage.removeItem("returnToAssetURL");
        } else {
            // No web storage support..
            // todo: implement fall back to server caching
        }
    }



</script>
