@model Duncan.PEMS.Entities.Assets.MeterSpacesModel
@using Duncan.PEMS.Utilities
@using Kendo.Mvc.UI

@{
    ViewBag.Title = @HttpContext.Current.GetLocaleResource( ResourceTypes.PageTitle, "View Meter Spaces" );
}


@section PageHeader 
{
    <h1><a href="/">@HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Home" )</a> / <a href="Index">@HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Asset Management" )</a> / @HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "Asset Inquiry" ) / <span>@HttpContext.Current.GetLocaleResource( ResourceTypes.Glossary, "View Asset" )</span></h1>
}


<div class="validationSum-container">@Html.ErrorOverview( ViewData.ModelState )</div>

<div class="customer_tab_content_section">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Meter To Space Association" )</div>    

<div class="clear">

    <div class="two-column payment">

        <div>
            <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Asset Type" )@Html.Raw( ": " )</div>
            @Html.DisplayFor( m => m.Type, new {@class = "customer_text"} )
            @Html.HiddenFor( m => m.Type )&nbsp;
        </div>

        <div>
            <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Asset ID" )@Html.Raw( ": " )</div>
            @Html.DisplayFor( m => m.AssetId, new {@class = "customer_text"} )
            @Html.HiddenFor( m => m.AssetId )&nbsp;
        </div>
    </div>

    <div class="two-column payment">
        <div>
            <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Asset Model" )@Html.Raw( ": " )</div>
            @Html.DisplayFor( m => m.AssetModel, new {@class = "customer_text"} )
            @Html.HiddenFor( m => m.AssetModel )&nbsp;
        </div>
        <div>
            <div class="customer_text_label">@HttpContext.Current.GetLocaleResource( ResourceTypes.Label, "Asset Name" )@Html.Raw( ": " )</div>
            @Html.DisplayFor( m => m.Name, new {@class = "customer_text"} )
            @Html.HiddenFor( m => m.Name )&nbsp;
        </div>
    </div>

</div>

<div style="clear: both"></div>

<div id="spacesList">
    
    @(Html.Kendo().Grid( Model.Spaces ) // Bind the grid to the Model property of the view
          .Name( "SpacesGrid" )
          .Columns( columns =>
                        {
                            columns.Bound( p => p.AssetId ).Width( 200 ).ClientTemplate( @Html.ActionLink( "#= SpaceId #", "ViewSpace", "Assets", new
                                                                                                                                                      {
                                                                                                                                                          customerId = Model.CustomerId,
                                                                                                                                                          areaId = "#= AreaId #",
                                                                                                                                                          assetId = "#= SpaceId #",
                                                                                                                                                          viewOnly = Model.ViewOnly
                                                                                                                                                      },
                                                                                                           new {} ).ToHtmlString() ).Title( "Space ID" );
                            columns.Bound(p => p.BayNumber);
                            columns.Bound(p => p.BayName);
                            columns.Bound(p => p.SensorId);
                            columns.Bound( p => p.DemandStatus );
                            columns.Bound( p => p.Latitude );
                            columns.Bound( p => p.Longitude );
                            columns.Bound( p => p.Street );
                        } )
          .Pageable()
          .Sortable()
          .Scrollable( scr => scr.Height( 430 ) )
         // .Filterable().DataSource( datasource => datasource.Ajax() )    
    
          )
    
    
</div>

    
<div class="customer_actions">
    @Html.ActionLink( "Return", "ViewMeter", "Assets", new {customerId = Model.CustomerId, areaId = Model.AreaId, assetId = Model.AssetId}, new {@class = "button previous", @type = "button"} )
</div>



<script>

    var gridFilters = { "SelectedIndex": -1, "CurrentPage": 1 };

    function RowClick() {
        //get the current page 
        gridFilters.CurrentPage = $("#CurrentGrid").data("kendoGrid").dataSource.page();
        //get selected row here
        gridFilters.SelectedIndex = $("#CurrentGrid").data("kendoGrid").select().index();
        //save the filters
        $.post('/shared/Sessions/SaveAlarmFilters', gridFilters);
    }

</script>