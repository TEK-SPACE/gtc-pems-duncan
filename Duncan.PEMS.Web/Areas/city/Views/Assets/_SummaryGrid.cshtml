@* /******************* CHANGE LOG ************************************************************************************************************************************
 * DATE                 NAME                        DESCRIPTION
 * ___________      ___________________             _________________________________________________________________________________________________________
 * 
 * 01/08/2014       Sergey Ostrerov                 Issue: DPTXPEMS-137 - Exported files (pdf/csv/xl) match the grid but they all show up to decimal 5 digits only.     *                                                                        Changed Latitude/Longitude format from 5 to 6 digits. 
 *                                                                        Changed Latitude/Longitude from 100 to 110.
 *   
 * ******************************************************************************************************************************************************************/ *@

@using Duncan.PEMS.Utilities
@using Kendo.Mvc.UI
@model IEnumerable<Duncan.PEMS.Entities.Assets.AssetListModel>

@(Html.Kendo().Grid( Model )
      .Name( "CurrentGrid" )
      .HtmlAttributes( new {style = "max-width: 1693px; height: 470px;"} )
      .Columns( columns =>
                    {
                        columns.Bound(p => p.AssetId).Sortable(false).HeaderTemplate("<input type='checkbox' id='SelectAll' onclick='CheckedAll(this)' ></input>")
                            .ClientTemplate(@Html.CheckBox("ASSET_#= DisplayAssetId #", new { @id = "ASSET_#= DisplayAssetId #", value = "#= DisplayAssetId #" }).ToHtmlString()).Width(50);
                        columns.Bound(p => p.AssetId).ClientTemplate(@Html.ActionLink("#= DisplayAssetId #", "View#= Type #", "Assets", new { customerId = @ViewData[Constants.ViewData.CurrentCityId], areaId = "#= AreaId #", assetId = "#= DisplayAssetId #" },
                                                                                      new { @onclick = "OnRowSelected(this);" }).ToHtmlString()).Width(200);
                        columns.Bound(p => p.AssetName).Width(175);
                        columns.Bound(p => p.AssetModel).Width(175);
                        columns.Bound( p => p.Street ).Width( 150 );                       
                        columns.Bound( p => p.OperationalStatus ).Width( 200 );
                        columns.Bound(p => p.Area).Width(100);
                        columns.Bound(p => p.Zone).Width(100);
                        columns.Bound(p => p.Suburb).Width(125);
                        columns.Bound(p => p.Latitude).Width(110).Format("{0:n6}");
                        columns.Bound(p => p.Longitude).Width(110).Format("{0:n6}");
                        columns.Bound(p => p.SpacesCount).Width(100);
                        columns.Bound(p => p.DemandStatus).Width(125);
                        columns.Bound(p => p.InventoryStatus).Width(125);
                        columns.Bound(p => p.SpecialActionText).Title("Special Action").Width(125);
                        columns.Bound(p => p.HasSensorText).Title("Has Sensor").Width(125);
                    } )
      .Selectable( select => select.Mode( GridSelectionMode.Single ).Type( GridSelectionType.Row ) )
      .Reorderable( reorder => reorder.Columns( false ) )
      .Pageable( pager => pager.PageSizes( true ).PageSizes( new int[] {100, 250, 500, 1000} ) )
      .AutoBind( false )
      .Sortable( sortable => sortable.SortMode( GridSortMode.MultipleColumn ) )
      .Resizable( resize => resize.Columns( true ) )
      .Scrollable()
      .Events( events => events.DataBound( "OnGridDataBound" ) )
      .Events( events => events.Change( "OnRowSelected" ) )
      .Events( events => events.ColumnResize( "OnRowResized" ) )
      .DataSource( dataSource => dataSource.Ajax().Read( read => read.Action( "GetSummaryItems", "Assets" ).Data( "additionalData" ) )
      ))