@using Duncan.PEMS.DataAccess.RBAC
@using Duncan.PEMS.Utilities
@using Kendo.Mvc.UI
@*@model Duncan.PEMS.Entities.News.NewsItem*@
@model Duncan.PEMS.Entities.News.Dashboard

@{
    ViewBag.Title = @HttpContext.Current.GetLocaleResource(ResourceTypes.PageTitle, "PEMS City Home Page");
}


@section Styles
{
    @Styles.Render("~/css/Kendo")

    <style type="text/css">
        .disabled {
            background-color: #F5F5F5 !important;
        }

        ready .filter-SearchButton {
            background-color: #33BAB1 !important;
            border: 1px solid #00A99D !important;
        }

        .k-grid-header .k-header {
            overflow: visible;
            white-space: normal;
        }

        .k-pager-wrap .k-dropdown {
            width: 75px !important;
        }


        #legendTitle {
            width: 223px;
            height: 27px;
            margin: 0px;
            padding-right: 5px;
            display: none;
            font-family: "futura-pt-n4", "futura-pt", Arial, sans-serif;
            font-weight: 400;
            font-size: 16px;
        }

        #legendPanel {
            width: 226px;
            height: 275px;
            background: #fff;
            background-color: #fff;
            padding: 0px;
            margin: 0px;
            margin-right: 0px;
            border: solid;
            border-color: darkgray;
            border-width: thin;
            display: inline;
            overflow: scroll;
        }

        .legendHeaders {
            margin-left: 5px;
            margin-top: 5px;
            margin-bottom: 2px;
        }


        .legImg {
            float: left;
        }

        .legendLabels {
            /*font-family:Arial;*/
            /*font-weight:normal;*/
            font-size: 11px;
            margin: 0px;
            margin-left: 5px;
        }

        #legendTitle {
            background-color: #174A7D;
            margin: 0px;
            color: white;
        }

        .header {
            height: 5px;
            background: #F0F0F0;
            border: 1px solid #CCC;
            width: 960px;
            /*margin:0px auto;*/
        }


        .DBHolder {
            border-radius: 2px;
            background: #f5f5f5;
            padding: 20px;
            width: 100%;
            height: 151px;
        }

        .DBHolderChart {
            border-radius: 2px;
            background: #f5f5f5;
            padding: 20px;
            width: 100%;
            height: 200px;
        }

        .DB1 {
            margin: 10px;
            margin-top: 1px;
            padding: 0;
            width: 232px;
            height: 150px;
            -webkit-box-shadow: 8px 10px 10px rgba(0,0,0,0.5), inset 8px 10px 10px #ccc;
            -moz-box-shadow: 8px 10px 10px rgba(0,0,0,0.5), inset 8px 10px 10px #ccc;
            box-shadow: 8px 10px 10px rgba(0,0,0,0.5), inset 1px 1px 1px #ccc;
            background: white;
        }

        .DB2 {
            margin: 10px;
            margin-top: 1px;
            padding: 0;
            width: 311px;
            height: 195px;
            -webkit-box-shadow: 8px 10px 10px rgba(0,0,0,0.5), inset 8px 10px 10px #ccc;
            -moz-box-shadow: 8px 10px 10px rgba(0,0,0,0.5), inset 8px 10px 10px #ccc;
            box-shadow: 8px 10px 10px rgba(0,0,0,0.5), inset 1px 1px 1px #ccc;
            background: white;
        }

        .today {
            padding: 2px 4px;
            border: none;
            width: 42px;
            height: 17px;
            margin-top: 8px;
            color: white;
            border-radius: 1px;
            font-family: Arial;
            font-size: 10px;
            background-color: #00a2e8;
        }

        .todayGreen {
            padding: 2px 4px;
            border: none;
            width: 42px;
            height: 17px;
            margin-top: 8px;
            color: white;
            border-radius: 1px;
            font-family: Arial;
            font-size: 10px;
            background-color: #3ec770;
        }

        .todayOrange {
            padding: 2px 4px;
            border: none;
            width: 42px;
            height: 17px;
            margin-top: 8px;
            color: white;
            border-radius: 1px;
            font-family: Arial;
            font-size: 10px;
            background-color: #ff6112;
        }

        .weekly {
            padding: 2px 4px;
            border: none;
            width: 47px;
            height: 17px;
            margin-top: 8px;
            color: white;
            border-radius: 1px;
            font-family: Arial;
            font-size: 10px;
            background-color: #d41558;
        }
    </style>
}

@Scripts.Render("~/bundles/kendo")

@section Scripts
{

    <script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>

    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>   <!-- Added by Sai on May 28th 2013 -->
    <script type="text/javascript" src="/scripts/markermanager_packed.js"></script> <!-- Added by Sai on June 26th 2013 -->
    <script type="text/javascript" src="/scripts/maplabel-compiled.js"></script> <!-- Added by Sai on July 10th 2013 -->
    <script type="text/javascript" src="/scripts/spin.min.js"></script> <!-- Added by Sai on July 2nd 2013 -->
    <script src="/scripts/nscgis.js"></script>  <!-- Added by Sai on May 28th 2013 -->
    <script type="text/javascript" src="~/Scripts/html2canvas.js"></script>
    <script type="text/javascript" src="/scripts/Kendo/kendo.all.min.js"></script>

    <script>


        var spinner;
        var isLegendDisplayed = false;
        var ROOT = '@Url.Content("~/")';

        var isAssetTypeLoaded = false;
        var isAssetStatusLoaded = false;
        var isLocationTypeLoaded = false;
        var isDemandZonesLoaded = false;
        var isLayer2_SpecCriteriaLoaded = false;
        var isLayer2_ComplianceLoaded = false;
        var isLayer3_SpecCriteriaLoaded = false;

        var mydata = [{ "name": "Work", "data": 108404, "mach": "Fongs-3" }, { "name": "Reason Late", "data": 80121, "mach": "Atyc-3" }, { "name": "Work", "data": 2920, "mach": "Then-13" }, { "name": "manuel wait", "data": 138383, "mach": "Then-12" }, { "name": "Work", "data": 174811, "mach": "Loris Bellini 2" }, { "name": "Work", "data": 39887, "mach": "Loris Bellini 1" }, { "name": "manuel wait", "data": 761119041, "mach": "Loris Bellini 1" }];


        var legendImagesArr = [
                           //** Inventory Layer Icons
                           ROOT + 'Images/msm_high_demand.png',
                           ROOT + 'Images/msm_low_demand.png',
                           ROOT + 'Images/msm_low_medium_demand.png',
                           ROOT + 'Images/msm_medium_high_demand.png',

                           ROOT + 'Images/sensor_high_demand.png',
                           ROOT + 'Images/sensor_low_demand.png',
                           ROOT + 'Images/sensor_low_medium_demand.png',
                           ROOT + 'Images/sensor_medium_high_demand.png',

                           ROOT + 'Images/gateway_high_demand.png',
                           ROOT + 'Images/gateway_low_demand.png',
                           ROOT + 'Images/gateway_low_medium_demand.png',
                           ROOT + 'Images/gateway_medium_high_demand.png',

                           ROOT + 'Images/space_high_demand.png',
                           ROOT + 'Images/space_low_demand.png',
                           ROOT + 'Images/space_low_med_demand.png',
                           ROOT + 'Images/space_med_high_demand.png',

                           //** High Demand Parking Bays Layer Icons
                           ROOT + 'Images/Occupied.png',
                           ROOT + 'Images/vacant.png',
                           ROOT + 'Images/Compliant.png',
                           ROOT + 'Images/Non_Compliant.png',

                           //** Parking Meter Operations Layer Icons
                           ROOT + 'Images/Inactive.png',
                           ROOT + 'Images/Operational.png',
                           ROOT + 'Images/Non_Operational_With_Alarm.png',
                           ROOT + 'Images/Operational_With_Alarm.png',
                           ROOT + 'Images/Non_Operational_With_Special_Event.png',
                           ROOT + 'Images/Non_Operational_With_Work_Zone.png',
                           ROOT + 'Images/Non_Operational_With_Maintenance.png',

                           //**Single Space Meter Layer Icons
                           ROOT + 'Images/ssm_high_demand.png',
                           ROOT + 'Images/ssm_low_demand.png',
                           ROOT + 'Images/ssm_low_medium_demand.png',
                           ROOT + 'Images/ssm_medium_high_demand.png',

                           //** Parking Space for Inventories
                           ROOT + 'Images/parkspace_high_demand.png',
                           ROOT + 'Images/parkspace_low_demand.png',
                           ROOT + 'Images/parkspace_low_medium_demand.png',
                           ROOT + 'Images/parkspace_medium_high_demand.png'

        ]



    </script>

    @Scripts.Render("~/bundles/kendo")

    <script>
        var enabledAssetsArr = [];
        $(document).ready(function () {

            //var chart = $("#revenueBox_3").data("kendoChart");
            //firstSeries = chart.options.series;
            //firstSeries[0].gap = parseFloat($("#gap").val(), 10);
            //chart.redraw();

            var myCustomerId = '@ViewBag.CurrentCityID';
            if (myCustomerId == 5001) {
                //** It is NOLA Customer and hence remove help btn temporarily as requested by Justin (DTPEMS-160)
                $('a#help').css('display', 'none');
            }

            //** Get the Lat and Lng details of Customer and load the map accordingly.
            loadGoogleMap('@ViewBag.Latitude', '@ViewBag.Longitude');
            orleans('@ViewBag.CurrentCityID');
            //** First get the list of 'Enabled' asset types for the customer
            FetchEnabledAssetTypes();
        });

        function FetchEnabledAssetTypes() {
            $.ajax({
                type: "GET",
                // url: '@Url.Action("GetAssetTypes_Inventory", "GIS")',
                url: '@Url.Action("GetAssetTypes_HomePage", "GIS")',

                data: SetLayerId(),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (Data) {
                    $.each(Data, function (index, value) {
                        enabledAssetsArr.push(Data[index].Value) //** This array contains enabled metergroup IDs
                    });

                    //** In order to plot enabled inventories for the customer, invoke the controller action for inventory
                    invokeInventoryActionMethod();
                    invokeParkingSpaceActionMethod();


                }
            });
        }

        function SetLayerId() {
            var layerID = "1";
            return { LayerID: layerID }
        }

        function invokeParkingSpaceActionMethod() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCustomerGridDetails_NewHome", "GIS")',
                data: GetAllFilterData_Parkingspaces(),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (Data) {
                    zoomCustomerToCenter('@ViewBag.Latitude', '@ViewBag.Longitude')
                    redrawMap();
                    if (isLegendDisplayed == false) {
                        showLegendPanel();
                        isLegendDisplayed = true;
                        $('#legendPanel').scroll();

                        loadLegendDetails();
                    }

                    //** Declare an array to hold all inventory layer markers
                    var markerArr = [];

                    //$.each(Data.Data, function (index, value) {
                    //    markerArr.push(Data.Data[index]) //** This array contains lat and lng objects
                    //});

                    $.each(Data, function (index, value) {
                        markerArr.push(Data[index]) //** This array contains lat and lng objects
                    });

                    executeClearPOI_HDPB() //** Clear all the OLD data POI on the map for the respective layers


                    var layerValue = $("#layerDropDown").val();

                    plotMarkers_HighDemandBays(markerArr, legendImagesArr, "Home") //** '1' indicates inventory layer




                },
                error: function () {
                    //alert("An error occurred while processing XML file.");
                }
            });
        }

        function invokeInventoryActionMethod() {
            //  zoomCustomerToCenter('@ViewBag.Latitude', '@ViewBag.Longitude')
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCustomerGridDetails_NewHome", "GIS")', //** 30th march 2015 new func called
                data: GetAllFilterData(),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (Data) {



                    redrawMap();
                    //if (isLegendDisplayed == false) {
                    //    showLegendPanel();
                    //    isLegendDisplayed = true;
                    //    $('#legendPanel').scroll();

                    //   // loadLegendDetails();
                    //}

                    //** Declare an array to hold all inventory layer markers
                    var markerArr = [];

                    //$.each(Data.Data, function (index, value) {
                    //    markerArr.push(Data.Data[index]) //** This array contains lat and lng objects
                    //});
                    $.each(Data, function (index, value) {
                        if ((Data[index].Latitude == 0 || Data[index].Longitude == 0 || String(Data[index].Latitude) == "null" || String(Data[index].Longitude) == "null")) {
                            //** dont push records for the map
                        } else {
                            markerArr.push(Data[index]) //** This array contains lat and lng objects
                        }

                    });


                    // alert('ss'+markerArr.length)

                    executeClearPOI_Inv() //** Clear all the OLD data POI on the map for the respective layers


                    var layerValue = $("#layerDropDown").val();
                    //  alert('rss' + markerArr.length)
                    plotMarkers_Inventory(markerArr, legendImagesArr, "Home") //** '1' indicates inventory layer




                },
                error: function () {
                    //alert("An error occurred while processing XML file.");
                }
            });

        }

        function executeClearPOI_Inv() {
            var layerValue = $("#layerDropDown").val();
            //** Clear all the OLD data POI on the map for the respective layers
            if (layerValue == 1) {
                clearMap(InvMarkerRepository, invMgr, InvPolygonRepository_Area, InvPolylineRepository_Area, InvPolygonRepository_Zone, InvPolylineRepository_Zone)
            } else if (layerValue == 2) {
                clearMap(HdbMarkerRepository, hdbMgr, HdbPolygonRepository_Area, HdbPolylineRepository_Area, HdbPolygonRepository_Zone, HdbPolylineRepository_Zone)
            } else if (layerValue == 3) {
                clearMap(PmoMarkerRepository, pmoMgr, PmoPolygonRepository_Area, PmoPolylineRepository_Area, PmoPolygonRepository_Zone, PmoPolylineRepository_Zone)
            }
        }

        function executeClearPOI_HDPB() {
            var layerValue = $("#layerDropDown").val();
            //** Clear all the OLD data POI on the map for the respective layers
            if (layerValue == 1) {
                //  clearMap(InvMarkerRepository, invMgr, InvPolygonRepository_Area, InvPolylineRepository_Area, InvPolygonRepository_Zone, InvPolylineRepository_Zone)
            } else if (layerValue == 2) {
                clearMap(HdbMarkerRepository, hdbMgr, HdbPolygonRepository_Area, HdbPolylineRepository_Area, HdbPolygonRepository_Zone, HdbPolylineRepository_Zone)
            } else if (layerValue == 3) {
                clearMap(PmoMarkerRepository, pmoMgr, PmoPolygonRepository_Area, PmoPolylineRepository_Area, PmoPolygonRepository_Zone, PmoPolylineRepository_Zone)
            }
        }

        function GetAllFilterData() {
            CustomerId = '@ViewBag.CurrentCityID';
            SpecificCriteria = -5;
            //alert('enabledAssetsArr' + enabledAssetsArr)
            AssetType = enabledAssetsArr.toString();//"11,32,31,1,10,0";
            AssetId = "";
            LocationTypeId = "";
            LocationTypeName = "All";
            ParallerLocationId = "";
            AssetStatus = "1";
            demZoneVal = "-1";
            SpecificCriteria = "-5";
            LayerValue = "1";
            AssetModelVal = "-1";
            NonComplianceIDVal = "1,2,3";

            return { customerId: CustomerId, assetType: AssetType, assetId: AssetId, locationTypeId: LocationTypeId, locationTypeName: LocationTypeName, parallerLocationId: ParallerLocationId, assetStatus: AssetStatus, demZone: demZoneVal, specificCriteria: SpecificCriteria, layerValue: LayerValue, assetModel: AssetModelVal, nonCompStatus: NonComplianceIDVal, pageChosen: "mapChosen" }
        }

        function GetAllFilterData_Parkingspaces() {

            CustomerId = '@ViewBag.CurrentCityID';
            SpecificCriteria = -5;
            //alert('enabledAssetsArr' + enabledAssetsArr)
            AssetType = enabledAssetsArr.toString();//"11,32,31,1,10,0";
            AssetId = "";
            LocationTypeId = "";
            LocationTypeName = "All";
            ParallerLocationId = "";
            AssetStatus = "1";
            demZoneVal = "-1";
            SpecificCriteria = "1,2";
            LayerValue = "2";
            AssetModelVal = "-1";
            NonComplianceIDVal = "1,2,3";
            complianceStatus = "All";


            return { customerId: CustomerId, assetType: AssetType, assetId: AssetId, locationTypeId: LocationTypeId, locationTypeName: LocationTypeName, parallerLocationId: ParallerLocationId, assetStatus: AssetStatus, demZone: demZoneVal, specificCriteria: SpecificCriteria, layerValue: LayerValue, assetModel: AssetModelVal, nonCompStatus: NonComplianceIDVal, complianceStatusIs: complianceStatus, pageChosen: "mapChosen" }



        }

        function getLegendDetails(xml, layerName) {
            $(xml).find(layerName).each(function () {
                $.each(this.attributes, function (i, attrib) {
                    var name = attrib.name;
                    var layerTitle = attrib.value;
                    if (layerTitle == "High Demand Bays") {
                        layerTitle = "Parking Spaces";
                    }
                    $("<p id='ifwTitle'></p>").text(layerTitle).appendTo("#legendPanel");
                });
            });

            //** Append only the Enabled asset types to the Legend panel
            var enabledAssetNames = [];
            for (var i = 0; i < enabledAssetsArr.length; i++) {
                if (enabledAssetsArr[i] == 0) {
                    //** It indicates SSM / Liberty
                    enabledAssetNames.push("Single Space Meter")
                } else if (enabledAssetsArr[i] == 1) {
                    //** It indicates MSM
                    enabledAssetNames.push("Multiple Space Meter")
                } else if (enabledAssetsArr[i] == 10) {
                    //** It indicates Sensor
                    enabledAssetNames.push("Sensor")
                } else if (enabledAssetsArr[i] == 11) {
                    //** It indicates Cashbox
                    enabledAssetNames.push("Cashbox")
                } else if (enabledAssetsArr[i] == 20) {
                    //** It indicates Parking Spaces
                    enabledAssetNames.push("Parking Space")
                } else if (enabledAssetsArr[i] == 31) {
                    //** It indicates Mechanisms
                    enabledAssetNames.push("Mechanism")
                } else if (enabledAssetsArr[i] == 32) {
                    //** It indicates Datakey
                    enabledAssetNames.push("DataKey")
                }
            }

            $(xml).find(layerName).find("Item").each(function (index) {
                var legendName = $(this).find('LegendLabel').text();
                var legendImage = "@Url.Content("~/Images/")" + $(this).find('LegendImage').text();
                var img = $('<img style="float:left;margin-left:6px;"/>').attr({ 'id': legendName, 'src': legendImage, 'alt': legendName })
                if (layerName == "AssetColorCodes") {
                    var imageLabel = $("<p style='font-size:13px;' id='ifw'>&nbsp;&nbsp;" + legendName + "</p>")
                } else {
                    var imageLabel = $("<p style='line-height: 100%;font-size:13px;' id='ifw'>&nbsp;&nbsp;" + legendName + "</p>")
                }

                var imageHolder = $('<div style="display:inline";>').html(img);

                var legItem = $("<div style='width:210px;'></div>")

                //** add only enabled assets to legend panel
                var assetFound = false;
                for (var i = 0; i < enabledAssetNames.length; i++) {
                    if (enabledAssetNames[i] == legendName) {
                        assetFound = true;
                        break;
                    }
                }

                if (assetFound == true || (legendName == "Occupied" || legendName == "Vacant")) {
                    //** It indicates only inventory layer and parking bays
                    legItem.append(imageHolder)
                    legItem.append(imageLabel)
                    $("#legendPanel").append(legItem)
                }
            });
        }

        function drawStLine() {
            var legendImage = "@Url.Content("~/Images/stLine.png")";
            var img = $('<img style="float:left;margin-left:0px;"/>').attr({ 'id': 'stLiner', 'src': legendImage, 'alt': 'stLiner' })
            var imageHolder = $('<div style="display:inline";>').html(img);
            $("#legendPanel").append(imageHolder)
        }

        function loadLegendDetails() {
            $("#legendPanel").append("<div></div>");
            $.ajax({
                type: "GET",
                // url: "@Url.Content("~/legendDetails.xml")",
                url: "@Url.Content("~/Images/legendDetails.xml")",
                dataType: "xml",
                success: function (xml) {

                    //** Inventory Layer legends (if any)
                    getLegendDetails(xml, 'Inventory_Layer')
                    drawStLine()


                    //** High Demand Bays Layer legends (if any)
                    getLegendDetails(xml, 'HighDemandBays_Layer');
                    drawStLine()

                    //** AssetColorCodes legends (if any)
                    //var isDemZoneVisible = $("#demandZones").css('display');
                    //if (isDemZoneVisible == "none") {
                    //} else {
                    //    getLegendDetails(xml, 'AssetColorCodes');
                    //    drawStLine()
                    //}


                },
                error: function () {
                    alert("An error occurred while processing XML file.");
                }
            });

        }

    </script>
}


@*<div class="two-column" id="news">*@
<div>
    @*<h2>@HttpContext.Current.GetLocaleResource(ResourceTypes.Glossary, "News and Announcements")</h2>
        <h3>@HttpContext.Current.GetLocaleResource(ResourceTypes.Glossary, "Today is") @String.Format("{0:D}", ViewData[Constants.ViewData.CurrentLocalTime]) </h3>

        <ul>
            @foreach (var newsItem in Model)
            {
                <li>
                    <span style="font-style: italic">
                        @newsItem.EffectiveDate.ToShortDateString()
                    </span>
                    <br/>
                    <span>
                        @Html.Raw(@HttpUtility.HtmlDecode(@newsItem.Content))
                    </span>
                </li>
            }
        </ul>*@
    <p style="*margin-left:12px; font-family:Arial;font-weight:700;font-size:16px;height:12px;color:#075c87; float:left;">Inventory</p>
    <img style="margin-left:2px;margin-top:10px;" src="~/Images/downarrow.png" />
    <div class="DBHolder">

        <div class="DB1" style="float: left; margin-left: 3px; margin-right: 2px; float: left;">
            <div style="height:30px;vertical-align:middle;">
                <p style="margin-left: 4px; margin-top: 7px; font-family: Arial; font-weight: 600; font-size: 13px; height: 13px; color: #545351; float: left; padding-right: 10px">Locations</p>
                <p style="margin-left: 4px; margin-right: 5px; margin-top: 7px; font-family: Arial; font-weight: 100; font-size: 12px; height: 13px; color: #545351; float: right;"><button class="today">Today</button>
            </div>
            <div style="border: 0.1px inset rgba(224, 224, 224, .5);width:229px;height:0.1px;"></div>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:13px;height:5px;color:#73726e">Total Locations&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <b>@ViewBag.TotalCount</b></p>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:13px;height:5px;color:#73726e">Locations Activated &nbsp;&nbsp;&nbsp; : <b>@ViewBag.MeterCount</b> </p>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:13px;height:15px;color:#73726e"></p>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:13px;height:1px;color:#73726e"></p>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:11px;height:5px;text-decoration:underline; color:#73726e;float:left;"><a href="@Url.Action("Index", "Assets")" class="elements"><span>Active Meters : </span></a></p>
            <p style="margin-left:8px;margin-top:21px;font-family:Arial;font-weight:900;font-size:14px;height:3px;color:#42a5d6">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@ViewBag.PMeter%</p>
        </div>

        <div class="DB1" style="float: left; margin-left: 3px; margin-right: 2px; float: left;">
            <div style="height:30px;vertical-align:middle;">
                <p style="margin-left: 4px; margin-top: 7px; font-family: Arial; font-weight: 600; font-size: 13px; height: 13px; color: #545351; float: left; padding-right: 10px">Alarms</p>
                <p style="margin-left: 4px; margin-right: 10px; margin-top: 7px; font-family: Arial; font-weight: 100; font-size: 12px; height: 13px; color: #545351; float: right;"><button class="weekly">Current</button>
            </div>
            <div style="border: 0.1px inset rgba(224, 224, 224, .5);width:229px;height:0.1px;"></div>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:13px;height:5px;color:#73726e">Severe Alarms &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <b>@ViewBag.SevAlarmCount</b></p>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:13px;height:5px;color:#73726e">Major Alarms &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : <b>@ViewBag.MajAlarmrCount</b> </p>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:13px;height:5px;color:#73726e">Minor Alarms &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;: <b>@ViewBag.MinAlarmCount</b> </p>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:13px;height:5px;color:#73726e">Closed Alarms &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : <b>@ViewBag.InActAlarmCount</b> </p>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:11px;height:9px;text-decoration:underline;color:#73726e;float:left;"><a href="@Url.Action("Index", "Alarms")" class="elements"><span>Active Alarms : </span></a></p>

            <p style="margin-left:8px;margin-top:21px;font-family:Arial;font-weight:900;font-size:14px;height:3px;color:#d41558">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@ViewBag.PAlarm%</p>
        </div>


        <div class="DB1" style="float: left; margin-left: 3px; margin-right: 2px; float: left;">
            <div style="height:30px;vertical-align:middle;">
                <p style="margin-left: 4px; margin-top: 7px; font-family: Arial; font-weight: 600; font-size: 13px; height: 13px; color: #545351; float: left; padding-right: 10px">Comms-No Comms</p>
                <p style ="margin-left: 4px; margin-right: 5px; margin-top: 7px; font-family: Arial; font-weight: 100; font-size: 12px; height: 13px; color: #545351; float: right;"><button class="todayGreen">Today</button></p>
            </div>
            <div style="border: 0.1px inset rgba(224, 224, 224, .5);width:229px;height:0.1px;"></div>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:13px;height:5px;color:#73726e">Communicating &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <b>@ViewBag.ActCommCount</b></p>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:13px;height:5px;color:#73726e">Non-Communicating &nbsp;&nbsp; : <b>@ViewBag.ActNonCommCount</b> </p>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:13px;height:15px;color:#73726e">  &nbsp;   <b></b></p>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:11px;height:5px;text-decoration:underline;color:#73726e;float:left;"><a href="@Url.Action("ReportAssetMaintenance", "Reports")" class="elements"><span>Communicating Meters : </span></a></p>

            <p style="margin-left:8px;margin-top:21px;font-family:Arial;font-weight:900;font-size:14px;height:3px;color:#3ec770">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@ViewBag.PCommMeter%</p>
        </div>

        <div class="DB1" style="float: left; margin-left: 3px; margin-right: 2px; float: left;">
            <div style="height:30px;vertical-align:middle;">
                <p style="margin-left: 4px; margin-top: 7px; font-family: Arial; font-weight: 600; font-size: 13px; height: 13px; color: #545351; float: left; padding-right: 10px">Battery Report</p>
                <p style="margin-left: 4px; margin-right: 5px; margin-top: 7px; font-family: Arial; font-weight: 100; font-size: 12px; height: 13px; color: #545351; float: right;"><button class="todayOrange">Today</button>
            </div>
            <div style="border: 0.1px inset rgba(224, 224, 224, .5);width:229px;height:0.1px;"></div>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:13px;height:5px;color:#73726e">Change  &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <b>@ViewBag.BttrCount</b></p>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:13px;height:5px;color:#73726e">Plan to Change &nbsp;&nbsp;&nbsp;&nbsp; : <b>@ViewBag.PlanBttrCount</b> </p>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:13px;height:15px;color:#73726e"></p>
            <p style="margin-left:12px;margin-top:10px;font-family:Arial;font-weight:500;font-size:11px;height:5px;text-decoration:underline;color:#73726e;float:left;"><a href="@Url.Action("ReportAssetMaintenance", "Reports")" class="elements"><span>Meters with Battery Issues: </span></a></p>
            <p style="margin-left:8px;margin-top:21px;font-family:Arial;font-weight:900;font-size:13px;height:3px;color:#ff6112">&nbsp;&nbsp;@ViewBag.PBattery%</p>
        </div>
    </div>



    <p style="*margin-left:12px; font-family:Arial;font-weight:700;font-size:16px;height:12px;color:#075c87; float:left;">Revenue</p>
    <img style="margin-left:2px;margin-top:10px;" src="~/Images/downarrow.png" />

    <div class="DBHolderChart">
        <div style="width:325px;height:120px;float:left;">
            <div class="DB2" style="float:left;margin-left:3px;float:left;">
                <div style="height:30px;vertical-align:middle;">
                    <p style="margin-left:4px;margin-top:7px;font-family:Arial;font-weight:600;font-size:13px;height:12px;color:#545351;float:left;">&nbsp;&nbsp;Payment&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
                    <button class="today">Today</button>
                </div>

                <div style="width:100%;">
                    @(Html.Kendo().Chart()
                .Name("revenueBox_1")
                .HtmlAttributes(new { style = "width:295px;height:160px;font-size:8px; margin-left:3px;" })
                .Legend(legend => legend
                    .Visible(true).Position(ChartLegendPosition.Top).Font("10px Arial")
                )
                .Series(series =>
                {
                    series
                        .Column(new int[] { Model.PaymentAccepted })
                        .Name("Accepted Final").Labels(label => label.Visible(true).Position(ChartBarLabelsPosition.OutsideEnd));

                    series
                        .Column(new int[] { Model.PaymentPending })
                        .Name("Pending").Labels(label => label.Visible(true).Position(ChartBarLabelsPosition.OutsideEnd));

                    series
                        .Column(new int[] { Model.PaymentRefunded })
                        .Name("Refunded").Labels(label => label.Visible(true).Position(ChartBarLabelsPosition.OutsideEnd));

                    series
                        .Column(new int[] { Model.TotelPayment })
                        .Name("Total").Labels(label => label.Visible(true).Position(ChartBarLabelsPosition.OutsideEnd));


                })
                .SeriesColors(
                   "#00a2e8", "#3ec770", "#ff6112", "#d41558"

                )
                .CategoryAxis(axis => axis
                    .Categories( Model.Month ).Labels(label => label.Font("10px Arial"))
                    .MajorGridLines(lines => lines.Visible(false))
                )
                .ValueAxis(axis => axis
            .Numeric()
            .Labels(labels => labels.Format("{0}").Font("10px Arial").Step(2))
            .Line(line => line.Visible(false))
            .MajorGridLines(lines => lines.Visible(false))
        )

                .Tooltip(tooltip => tooltip
                    .Visible(true)
                            //.Template("#= series.name # #= value")
                )
                    )
                </div>

            </div>

        </div>

        <div style="float:left;width:325px;margin-left:2px;height:120px">
            <div class="DB2" style="float:left;margin-left:3px;float:left;">
                <div style="height:30px;vertical-align:middle;">
                    <p style="margin-left:4px;margin-top:7px;font-family:Arial;font-weight:600;font-size:13px;height:12px;color:#545351;float:left;">&nbsp;&nbsp;Transaction&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
                    <button class="today">Today</button>
                </div>
                @(Html.Kendo().Chart()
                .Name("revenueBox_2")
                  .HtmlAttributes(new { style = "width:295px;height:160px;font-size:8px; margin-left:3px;" })
                        //.Title(title => title
                        //    .Text("Share of Internet Population Growth, 2007 - 2012")
                        //    .Position(ChartTitlePosition.Bottom))
                .Legend(legend => legend
                    .Visible(true).Position(ChartLegendPosition.Right).Font("10px Arial")
                )
                .Series(series =>
                {
                    series.Pie(new dynamic[] {
                        new {category="Cash",value= Model.CashTransaction ,color="#00a2e8"},
                        new {category="Credit Card",value= Model.CreditTransaction ,color="#3ec770"},
                        new {category="Pay-By-Cell",value= Model.CellTransaction ,color="#ff6112"},
                        new {category="Smart Card",value= Model.SmartTransaction ,color="#d41558"}

                    })
                    .Labels(labels => labels
                        .Template("#= category #: \n #= value#")
                        .Background("transparent")
                        .Visible(true)
                        .Font("10px Arial")
                        .Template("#= value #")
                        .Position(ChartPieLabelsPosition.Center)
                    )
                    .StartAngle(150);
                })
                .Tooltip(tooltip => tooltip
                    .Visible(true)
                    .Format("{0}")
                )
                )
            </div>
        </div>

        <div style="float:left;width:325px;margin-left:2px;height:120px">
            <div class="DB2" style="float:left;margin-left:3px;float:left;">
                <div style="height:30px;vertical-align:middle;">
                    <p style="margin-left:4px;margin-top:7px;font-family:Arial;font-weight:600;font-size:13px;height:12px;color:#545351;float:left;">&nbsp;&nbsp;&nbsp;&nbsp;Transaction&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
                    <button class="weekly">Weekly</button>
                </div>
                <div style="width:100%;">
                    @* @(Html.Kendo().Chart()
                        .Name("revenueBox_3")
                        .HtmlAttributes(new { style = "width:295px;height:160px;font-size:8px;margin-left:3px; " })
                        //.Title("")
                        .Legend(legend => legend
                            .Position(ChartLegendPosition.Top).Font("10px Arial")
                        )
                        .SeriesDefaults(seriesDefaults =>
                            seriesDefaults.Bar().Stack(true)
                        )
                        .Series(series => {
                            series.Bar(new double[] { 840, 732, 734, 736,737 }).Name("Cash").Color("#00a2e8");
                            series.Bar(new double[] { 619, 625, 821, 826,828 }).Name("Credit Card").Color("#3ec770");
                            series.Bar(new double[] { 917, 917, 616, 628,540 }).Name("Pay By Cell").Color("#d41558");
                            series.Bar(new double[] { 317, 817, 916, 728,737 }).Name("Smart Card").Color("#ff6112");
                        })
                        .CategoryAxis(axis => axis
                            .Categories("Sep 27", "Sep 28", "Sep 29", "Sep 30", "Oct 1") .Labels(labels => labels.Font("10px Arial"))
                            .MajorGridLines(lines => lines.Visible(false))
                        )
                        .ValueAxis(axis => axis
                            .Numeric()
                            .Labels(labels => labels.Format("{0}").Font("10px Arial"))
                            .Max(4080)
                            .Line(line => line.Visible(false))
                            .MajorGridLines(lines => lines.Visible(false))
                        )
                        .Tooltip(tooltip => tooltip
                            .Visible(true)
                            .Template("#= series.name #: #= value #")
                        )
                        )*@

                    @(Html.Kendo().Chart()
        .Name("revenueBox_3")
        .HtmlAttributes(new { style = "width:295px;height:160px;font-size:8px;margin-left:3px; " })
        .Legend(legend => legend
            .Position(ChartLegendPosition.Top).Font("10px Arial")
        )
        .SeriesDefaults(seriesDefaults =>
            seriesDefaults.Bar().Stack(true)
        )
        .DataSource(ds => ds.Read(read => read.Action("GetLastSevenDayTrans", "GIS")))
        .Series(series =>
        {
            series.Bar(new double[] { Model.CashTransaction, Model.D2CashTransaction, Model.D3CashTransaction, Model.D4CashTransaction, Model.D5CashTransaction }).Name("Cash").Color("#00a2e8");
            series.Bar(new double[] { Model.CreditTransaction, Model.D2CreditTransaction, Model.D3CreditTransaction, Model.D4CreditTransaction, Model.D4CreditTransaction }).Name("Credit Card").Color("#3ec770");
            series.Bar(new double[] { Model.CellTransaction, Model.D2CellTransaction, Model.D3CellTransaction, Model.D4CellTransaction, Model.D5CellTransaction }).Name("Pay By Cell").Color("#d41558");
            series.Bar(new double[] { Model.SmartTransaction, Model.D2SmartTransaction, Model.D3SmartTransaction, Model.D4SmartTransaction, Model.D5SmartTransaction }).Name("Smart Card").Color("#ff6112");
        })
        .CategoryAxis(axis => axis
            .Categories("Sep 27", "Sep 28", "Sep 29", "Sep 30", "Oct 1").Labels(labels => labels.Font("10px Arial"))
            .MajorGridLines(lines => lines.Visible(false))
        )
        .ValueAxis(axis => axis
            .Numeric()
            .Labels(labels => labels.Format("{0}").Font("10px Arial"))
            .Max(4080)
            .Line(line => line.Visible(false))
            .MajorGridLines(lines => lines.Visible(false))
        )
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Template("#= series.name #: #= value #")
        )
                    )

                </div>
            </div>

        </div>

    </div>




    <!-- Sairam added below line to display google map. Code added on Oct 8th 2014 -->
    <div id="mHolder" style="float:none;clear:both; font-family:futura-pt-n4, futura-pt, Arial, sans-serif;">
        <div id="map_canvas" style=" max-height: 95%; min-height: 95%; height: 487px; margin: 2px; margin-top:8px; font-family:futura-pt-n4, futura-pt, Arial, sans-serif;"></div>

    </div>

    <div id="legendPanel">

    </div>

    <div id="legendTitle">
        <p>&nbsp;&nbsp;Legend Panel</p>
    </div>

    @section PageHeader
{
        @{
            var userContext = new PEMRBACEntities();
            var username = User.Identity.Name;
            var user = userContext.UserProfiles.SingleOrDefault(u => u.UserName == username);
            <h1><span>@HttpContext.Current.GetLocaleResource(ResourceTypes.Glossary, "Welcome"), @String.Format("{0} {1}", user.FirstName, user.LastName)</span></h1>
        }
        @if (ViewBag.PWExpirationDays < 15)
        {
            <div class="message">
                <ul>
                    <li>@HttpContext.Current.GetLocaleResource(ResourceTypes.Glossary, "Your password will expire in") @ViewBag.PWExpirationDays @HttpContext.Current.GetLocaleResource(ResourceTypes.Glossary, "day(s).")</li>
                </ul>
            </div>
        }

    }

